{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","components/Project/UpdateProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/secureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","console","log","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsNotAuthenticated","userIsAuthenticated","fullName","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_props","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","proptype","PropTypes","object","isRequired","func","error","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","created_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","loginRequest","login","LoginRequest","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","react_router","assign","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","Layout_Header","exact","path","secureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b47e4b7.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  console.log(project);\r\n  try {\r\n    await axios.post(\"/api/project\", project)\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    })\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\")\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload:res.data // payload to reducuer\r\n  })\r\n}\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`)\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload:res.data\r\n    })\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n}\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (window.confirm(\"Are you sure? This willl delete project and all data related to it\")) {\r\n    await axios.delete(`/api/project/${id}`)\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    })  \r\n  }\r\n}\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for BACKLOG ACTIONS\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { deleteProject} from '../../actions/projectActions'\r\n\r\nclass ProjectItem extends Component {\r\n\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  }\r\n\r\n  render() {\r\n    const { project } = this.props; // get props from dashboard\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                  <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\r\n                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                  </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> \r\n    )\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteProject})(ProjectItem);","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CreateProjectButton = () =>  {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from 'react'\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const {projects} = this.props.project\r\n    return (\r\n    <div className=\"projects\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <h1 className=\"display-4 text-center\">Projects</h1>\r\n            <br />\r\n            <CreateProjectButton/>\r\n              <br />\r\n              \r\n            <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project}/>  \r\n              ))\r\n              }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    )\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project,\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProjects})(Dashboard);","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"]\r\n  }\r\n};\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\"\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // post => longin request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest)\r\n\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    \r\n    // store the token in the localStraoge\r\n    localStorage.setItem(\"jwtToken\", token)\r\n\r\n    // set our token in header\r\n    setJWTToken(token);\r\n\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n\r\n    // dispatch to our securityReducer  \r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    }) \r\n  }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\")\r\n  setJWTToken(false)\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  })\r\n} ","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport { logout } from \"../../actions/securityActions\"\r\n  \r\nclass Header extends Component {\r\n\r\n  logout(){\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n\r\n    const { validToken, user } = this.props.security;\r\n    \r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    )\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\"/>\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    )\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(Header);","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\n\r\nclass AddProject extends Component { \r\n  //setup initial state (constructor)\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors:{}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({errors:nextProps.errors})\r\n    }\r\n  }\r\n\r\n  //setup onChange function to input(disable immutable)\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]:e.target.value}) //whatever name = whatever name\r\n  }\r\n\r\n  //onSubmit function\r\n  //create new object to pass to server\r\n  onSubmit(e) {\r\n    e.preventDefault(); // prevent refresh incase of error\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history)\r\n  }\r\n\r\n\r\n  render() {\r\n    const { errors } = this.state\r\n    \r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\":errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\" \r\n                    name=\"projectName\"  \r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\":errors.projectIdentifier\r\n                    })}\r\n                    placeholder=\"Unique Project ID\" \r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\":errors.projectIdentifier\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\" \r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {createProject}) (AddProject);\r\n","import React, { Component } from 'react'\r\nimport { getProject, createProject } from \"../../actions/projectActions\"\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\n\r\nclass UpdateProject extends Component {\r\n  \r\n  //set state(constructor)\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // fetch prop info and set them into state\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n        this.setState({errors:nextProps.errors})\r\n    }\r\n    const { \r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    })\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })  \r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">\r\n                Update Project Form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\":errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\" \r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {\r\n                    errors.projectName && (\r\n                      <div className=\"invalid-feedback\">{errors.projectName}</div>  \r\n                    )\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    disabled   \r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\":errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  >  \r\n                  </textarea>\r\n                  {\r\n                    errors.description && (\r\n                      <div className=\"invalid-feedback\">{errors.description}</div>  \r\n                    )\r\n                  }\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\" \r\n                    value={this.state.start_date} \r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\" \r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject)\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(project => project.projectIdentifier !== action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    \r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      }\r\n    \r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task:action.payload\r\n      }\r\n    \r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload)\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_CURRENT_USER } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n}\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\"\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\"\r\nimport backlogReducer from \"./backlogReducer\"\r\nimport securityReducer from \"./securityReducer\"\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\")&&ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n  )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\"\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass ProjectTask extends Component {\r\n\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    } else if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    } else {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className = {`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence}  --  Priority:{priorityString}\r\n          {project_task.priority}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\"\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\";\r\n\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch(err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n}\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`)\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const getProjectTask = ( backlog_id, pt_id, history ) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`)\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    })\r\n  } catch (err) {\r\n    history.push(\"/dashboard\")\r\n  } \r\n}\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task)\r\n    history.push(`/projectBoard/${backlog_id}`)\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if (window.confirm(`Your are deleting project task ${pt_id}, this action cannot be undone`)) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`)\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    })\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask';\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_props } = this.props;\r\n\r\n    const tasks = project_tasks_props.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ))\r\n\r\n    let todoItems = []\r\n    let inProgressItems = []\r\n    let doneItems = []\r\n\r\n    for (let i = 0; i < tasks.length; i++){\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      } else if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      } else {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-center mb-2\">\r\n            <div className=\"card-header bg-secondary text-white\">\r\n              <h3>TO DO</h3>\r\n            </div>\r\n          </div>\r\n            {todoItems}\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-center mb-2\">\r\n            <div className=\"card-header bg-primary text-white\">\r\n              <h3>In Progress</h3>\r\n            </div>\r\n          </div>\r\n          {inProgressItems}\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-center mb-2\">\r\n            <div className=\"card-header bg-success text-white\">\r\n              <h3>Done</h3>\r\n            </div>\r\n          </div>\r\n          {doneItems}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Backlog\r\n","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport Backlog from './Backlog';\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from \"prop-types\"\r\nimport { getBacklog } from \"../../actions/backlogActions\"\r\n\r\nclass ProjectBoard extends Component {\r\n  \r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({errors:nextProps.errors})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if(project_tasks.length < 1){\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return(\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          )\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_props={project_tasks}/>\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n      <br />\r\n      <hr />\r\n      {BoardContent}  \r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nProjectBoard.proptype = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  error: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\nimport { addProjectTask } from \"../../../actions/backlogActions\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const { id } = this.props.match.params;\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}  \r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // get errors\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  //on hange\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  //onsubmit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                  Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\" \r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  >\r\n                  </textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\" \r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {addProjectTask})(AddProjectTask)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport classnames from \"classnames\"\r\nimport { getProjectTask, updateProjectTask } from \"../../../actions/backlogActions\"\r\nimport { PropTypes } from 'prop-types'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      created_At: \"\",\r\n      errors:{}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {backlog_id, pt_id} = this.props.match.params\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history)\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({errors: nextProps.errors})\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      created_At,\r\n    } = nextProps.project_task\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      created_At,\r\n    })\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({[e.target.name]:e.target.value})\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      created_At: this.state.created_At\r\n    }\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\r\n                    Back to Project Board\r\n                </Link>\r\n                <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name:{this.state.projectIdentifier} +\r\n                Project Task Id: {this.state.projectSequence}</p>\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                  name=\"summary\"\r\n                  placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  >  \r\n                    </textarea>\r\n                  </div>\r\n                  <h6>Due Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"dueDate\" \r\n                      value={this.state.dueDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <select\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"priority\"\r\n                      value={this.state.priority}\r\n                      onChange={this.onChange}\r\n                    >\r\n                      <option value={0}>Select Priority</option>\r\n                      <option value={1}>High</option>\r\n                      <option value={2}>Medium</option>\r\n                      <option value={3}>Low</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                      <option value=\"\">Select Status</option>\r\n                      <option value=\"TO_DO\">TO DO</option>\r\n                      <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                      <option value=\"DONE\">DONE</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProjectTask, updateProjectTask})(UpdateProjectTask)\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass Landing extends Component {\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>            \r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\" >\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)\r\n","import React, { Component } from \"react\"\r\nimport { createNewUser } from \"../../actions/securityActions\"\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    }\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    }\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value})\r\n  }\r\n\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address(UserName)\"\r\n                    name=\"username\" \r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\" \r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\" \r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, {createNewUser})(Register);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors:{}\r\n    };\r\n    this.onChange = this.onChange.bind(this)\r\n    this.onSubmit = this.onSubmit.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  \r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({errors:nextProps.errors})\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    this.props.login(loginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({[e.target.name]:e.target.value})\r\n  }\r\n\r\n  render() {\r\n    const{errors} = this.state\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit = {this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\" \r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {\r\n                    errors.username && (\r\n                      <div className=\"invalid-feedback\">{errors.username}</div>\r\n                    )\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"   \r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {\r\n                    errors.password && (\r\n                      <div className=\"invalid-feedback\">{errors.password}</div>\r\n                    )\r\n                  }\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n","import React from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst SecureRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route {...otherProps} render={props => security.validToken === true ? (\r\n    <Component {...props} />) : (\r\n      <Redirect to=\"/login\" />\r\n    )\r\n  }\r\n  />\r\n);\r\n\r\nSecureRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n})\r\nexport default connect(mapStateToProps)(SecureRoute)","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Dashboard from './components/Dashboard';\r\nimport Header from './components/Layout/Header';\r\nimport AddProject from './components/Project/AddProject';\r\nimport UpdateProject from './components/Project/UpdateProject';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\r\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\r\nimport Landing from './components/Layout/Landing';\r\nimport Register from './components/UserManagement/Register';\r\nimport Login from './components/UserManagement/Login';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from './actions/types';\r\nimport { logout } from './actions/securityActions';\r\nimport SecureRoute from \"./securityUtils/secureRoute\";\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif (jwtToken) {\r\n  setJWTToken(jwtToken) // everytime, any api is roaded, not losing token\r\n  const decoded_jwtToken = jwt_decode(jwtToken);\r\n  store.dispatch(\r\n    {\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded_jwtToken\r\n    }\r\n  )\r\n  const currentTime = Date.now() / 1000;\r\n\r\n  if(decoded_jwtToken.exp < currentTime) {\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n            {\r\n              //Public Route\r\n            }\r\n\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n\r\n            {\r\n              //private Route\r\n            }\r\n            <Switch>\r\n              <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <SecureRoute exact path=\"/addProject\" component={AddProject} />\r\n              <SecureRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\r\n              <SecureRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\r\n              <SecureRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\r\n              <SecureRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}